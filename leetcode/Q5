Problem:

Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"


Soultion:

执行用时 : 20 ms, 在Longest Palindromic Substring的Java提交中击败了86.80% 的用户
内存消耗 : 35.1 MB, 在Longest Palindromic Substring的Java提交中击败了23.79% 的用户

//同时计算奇数和偶数情况，保存距离最长时的起始下标
public String longestPalindrome(String s) {
        if(s.length()<=1) return s;
        int left = 0;
        int right=0;
        int max = 0;
        for(int i=0 ; i<s.length() ; i++){
            int len1 = getLen(s,i,i);//奇数
            int len2 = getLen(s,i,i+1);//偶数
            int len = Math.max(len1,len2);
            if(len > max){//更新首末下标
                left = i-(len-1)/2;
                right = i+len/2;
                max = len;
            }            
        }
        return s.substring(left,right+1);
        
    }
    
    public int getLen(String s,int L,int R){
        int len = 0;
        if(R==L) len=-1;
        while(L>=0 && R<s.length() && s.charAt(L)==s.charAt(R)){
            len+=2;
            L--;
            R++;
        }
        return len;
    }
